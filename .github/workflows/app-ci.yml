---
name: '2-App: Check, build and upload artifact'
on:
  push:
    tags: [ "v[0-9].[0-9]+.[0-9]" ]
    paths:
      - 'app-code/**'
      - '.github/workflows/app-*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        type: string

env:
  ENV: "dev"
  OWNER: "czm41k"
  AWS_REGION: us-west-1

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out main
        uses: actions/checkout@main
      - name: Install pylint
        run: pip3 install pylint==2.15.2
      - name: Run linter
        run: pylint $GITHUB_WORKSPACE/app-code/app.py

  scan-bandit:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out main
        uses: actions/checkout@main
      - name: Install bandit
        run: pip3 install bandit==1.7.4
      - name: Run scanner
        run: bandit -r app-code/

  build:
    needs: [lint,scan-bandit]
    name: "Build and upload to registry"
    runs-on: ubuntu-22.04
    steps:
    - name: Generate REPO envvar
      run: echo "REPO=617686195573.dkr.ecr.us-west-1.amazonaws.com/${{ env.OWNER }}-python-webserver-${{ env.ENVR }}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - name: Set tag
      env:
        MANUAL_TAG: ${{inputs.tag }}
      run: |
        if [[ $MANUAL_TAG ]]
        then
          echo "TAG=${{ inputs.tag }}" >> $GITHUB_ENV
        else
          echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        fi
    - name: Build the Docker image
      run: docker build app-code/ --file app-code/Dockerfile --tag ${{ env.REPO }}:${{ env.TAG }}
    - name: Configure aws-cli
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
    - name: Docker login
      run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.REPO }}
    - name: Upload to Registry
      run: docker push ${{ env.REPO }}:${{ env.TAG }}
...
