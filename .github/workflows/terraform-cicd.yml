---
name: 'Terraform CI/CD'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-cicd.yml'
  pull_request:
  workflow_run:
    workflows: ["Create s3-backend for state"]
    types: ["completed"]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_DEFAULT_REGION: "us-west-1"

jobs:
  format_and_plan:
    name: 'Run terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
    - name: Terraform Format
      run: terraform fmt -check
    - name: Terraform plan with changes detection
      run: |
        terraform plan -input=false -detailed-exitcode
        echo "CODE=$?" >> $GITHUB_ENV
    - name: Approve before Apply
      if: failure() && ${{ env.CODE }}=='2' # Run only in case of changes
      uses: trstringer/manual-approval@main
      with:
        secret: ${{ github.TOKEN }}
        approvers: czm41k
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
...
