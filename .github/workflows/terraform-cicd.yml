---
name: '1-Terraform CI/CD'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-cicd.yml'
  # pull_request:
  # workflow_run:
  #   workflows: ["0-Terraform: Create s3-backend for state"]
  #   types: ["completed"]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

jobs:
  format_and_plan:
    name: 'Run terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/dev/
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set Environment Variables
      uses: ./.github/actions/set-vars
      with:
        varFilePath: ./.github/variables/dev-vars.env
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
    - name: Terraform Format
      run: terraform fmt -check
    - name: Terraform Plan
      run: terraform plan -input=false
    - name: Approve before apply
      uses: trstringer/manual-approval@main
      with:
        secret: ${{ github.TOKEN }}
        approvers: ${{ env.OWNER }}
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
      continue-on-error: true # https://archive.sweetops.com/terraform/2021/07/ allow to fail
    - name: Get kubeconfig mounted and try apply again
      # if: failure()
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_DEFAULT_REGION }} --name "${{ env.OWNER }}-eks-${{ env.ENVR }}"
        terraform apply -auto-approve -var-file="access.tfvars"
...
