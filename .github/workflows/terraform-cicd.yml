name: 'IaC with Terraform'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-cicd.yml'
  pull_request:
  workflow_run:
    workflows: ["Create s3-backend for state"]
    types: ["completed"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  format_and_plan:
    name: 'Run terraform'
    runs-on: ubuntu-latest
    # environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: "us-west-1"
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: terraform/
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
    - name: Wait for manual approval before Apply
      uses: trstringer/manual-approval@main
      with:
        secret: ${{ github.TOKEN }}
        approvers: czm41k
    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
